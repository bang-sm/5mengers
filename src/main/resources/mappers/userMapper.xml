<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace ="userMapper">
 <!-- 로그인 회원 정보 입력 -->
 <insert id="register" parameterType="kr.co.vo.UserVO">
  	INSERT INTO user (
  		UUID
  		, NAME
  		, PHONENUM
  		, AUTH
  		, PASS
  		, USERID
  		, EMAIL
  	) VALUES (
  		uuid
  		, #{name}
  		, #{phonenum}
  		, #{auth}
  		, #{pass}
  		, #{userid}
  		, #{email}
  	
  	)
  </insert>
  	<!-- 회원들의 구매개수 ,판매개수 -->
	<select id="deal_list" resultType="kr.co.vo.UserVO">
		SELECT
		   (SELECT COUNT(*) FROM my_buy_book MBB WHERE MBB.UUID = u.UUID AND MBB.BSR_CONFIRM = 'Y') AS buy_count,
		   (SELECT COUNT(*) FROM book_sell_regist BSR WHERE BSR.UUID =u.UUID AND BSR.BSR_CONFIRM = 'Y') AS sell_count,
		   u.name,
		   u.userid 
		FROM
			user u
	</select>
  	<!-- 내가 판매중인책 개수 -->
	<select id="my_selling_count" resultType="int">
		SELECT 
			count(*)
		FROM 
			book_sell_regist bsr 
		LEFT OUTER JOIN 
			user u 
		ON
			u.uuid =bsr.uuid 
		WHERE 
			u.uuid =#{uuid} and bsr_status =1;
	</select>
  	<!-- 내가 구매중인책 개수 -->
	<select id="my_buying_count" resultType="int">
		SELECT 
			count(*)
		FROM 
			my_buy_book
		where 
			uuid=#{uuid} and bsr_confirm ='Z';
	</select>
	<!-- 나의 찜개수 -->
	<select id="my_zzim_count" resultType="int">
		SELECT 
			count(*) zzim
		FROM 
			zzim z join user u 
		ON 
			u.uuid =z.uuid 
	    AND 
	    	u.uuid=#{uuid};
	</select>
	  <select id="login" resultType="kr.co.vo.UserVO">
	  	
	  	SELECT
	  		*
	  	FROM user
	  	WHERE userid = #{userid}
	  	
	  </select>
	  
	  <!-- 세션 아이디, 로그인 유지 기간 설정시 기간 갱신 -->
	  <update id="keepLogin">
	  
	  	UPDATE user
	  	SET sesssion_key = #{sessionId}
	  		, session_limit = #{next}
	  	WHERE userid = #{userid}	  	
	  
	  </update>
	  
	  <!-- Session key 확인 -->
	  <select id="checkUserSessionKey" parameterType="String" resultType="kr.co.vo.UserVO">
	  
	  	SELECT
	  		*
	  	FROM user
	  	WHERE sesssion_key = #{value }
	  		AND session_limit > now()
	  
	  </select>
	  
  	<!-- 내가 판매중인 책 -->
	<select id="my_selling_book_list" parameterType="int" resultType="kr.co.vo.BookDetailDTO">
		SELECT
			*
		FROM
			book_sell_regist bsr
		WHERE
			uuid=#{uuid}
	</select>
	
	
  	<!-- 내가 찜중인 책 -->
	<select id="my_zzim_book_list" parameterType="int" resultType="kr.co.vo.BookDetailDTO">
		SELECT
		  	z.uuid,
		  	z.bsr_id,
		  	b.bsr_name,
		  	b.bsr_price,
		  	b.bsr_check
		FROM
		 	zzim z  inner join book_sell_regist b
		ON
			z.bsr_id=b.bsr_id AND z.uuid=#{uuid};
	</select>
	
	<!-- 내가 구매요청중인책 -->
	<select id="my_request_book_list" parameterType="int" resultType="kr.co.vo.BookDetailDTO">
		SELECT
			bs.bsr_name,
			bs.bsr_price,
			bs.uuid,
			bs.bsr_confirm 
		FROM 
			my_buy_book mb inner join book_sell_regist bs
		ON
			mb.bsr_id =bs.bsr_id AND mb.uuid =#{uuid} AND bs.bsr_confirm='Z';
	</select>
	
	<!-- 나의 구매 책 히스토리 -->
	<select id="my_book_history" parameterType="map" resultType="kr.co.vo.MyhistoryDTO">
		SELECT
			bs.bsr_name ,
			bs.bsr_id,
			bs.bsr_price ,
			date_format(mbb.myb_regdate, '%Y-%m-%d') as myb_regdate,
			mbb.bsr_confirm 
		FROM 
			my_buy_book mbb inner join book_sell_regist bs 
		ON	
			mbb.bsr_id =bs.bsr_id 
		AND mbb.uuid =#{uuid} AND  mbb.bsr_confirm ='Y' AND myb_regdate between #{startDate} and #{endDate};
	</select>
	<!-- 나의 qna리스트 -->
	<select id="my_qnaList" parameterType="map" resultType="kr.co.vo.QnADTO">
		SELECT *
		FROM
		 	qna_board
		ORDER BY 
			qb_id DESC
		LIMIT #{pageStart}, #{perPageNum}
	</select>
	<!-- 나의 qna등록 갯수 -->
	<select id="my_qna_count" parameterType="int" resultType="int">
    	SELECT
    		COUNT(*)
    	FROM
    		qna_board
    	WHERE uuid=#{uuid};
	</select>
	
	<!-- 나의 판매 책 히스토리 -->
	<select id="my_sell_history" parameterType="map" resultType="kr.co.vo.MyhistoryDTO">
		SELECT
			 bsr_name,
			 bsr_id,
			 bsr_price,
			 bsr_regdate
		FROM
			 book_sell_regist 
		WHERE
			 uuid=#{uuid} and bsr_check=1 
			 and bsr_regdate between #{startDate} and #{endDate};
	</select>
	
	<!-- 중복 id check! -->
	<select id="idCheck" resultType="int">
		SELECT 
			count(*) 
		FROM 
			user
		WHERE userid = #{userid}
			
	</select>
	
	<!-- auth check! -->
	<select id="authCheck" resultType="int">
		SELECT
			auth
		FROM
			user
		WHERE userid = #{userid}
	</select>
	
	<!-- 비밀번호 수정 -->
	  <update id="updatePass" >
	  
	  	UPDATE 
	  		user
	  	SET 
	  		pass = #{pass}
	  	WHERE 
	  		userid = #{userid}	  	
	  
	  </update>
	
	<!--찜해제 -->
	<delete id="zzim_delete" parameterType="map">
		DELETE FROM zzim 
		WHERE 
			uuid =#{uuid} and bsr_id=#{bsr_id};
	</delete>
	<!--구매 요청한 유저는 누구?? -->
	<select id="whoAreYou" parameterType="int" resultType="int">
		SELECT
			(select uuid from my_buy_book where bsr_id =#{bsr_id}) as whouuid
		FROM
			book_sell_regist
		WHERE
		 	bsr_id=#{bsr_id};
	</select>
	<!--구매 요청한 유저의  판매수락한 책상태도 업데이트 테이블 업데이트 -->
	<update id="buyBookUpdate" parameterType="map">
		UPDATE
			my_buy_book 
		SET 
			bsr_confirm ='Y' 
		WHERE uuid=#{whoUUid} and bsr_id=#{bsr_id};
		
		UPDATE
			book_sell_regist 
		SET 
			bsr_confirm ='Y',bsr_check=1,bsr_status=0
		WHERE bsr_id=#{bsr_id};
	</update>
	
	<!-- 비밀번호 수정 -->
	 <update id="bookStatusChange" parameterType="map">
		UPDATE 
			book_sell_regist
		SET 
			bsr_status = #{bsr_status}
		WHERE 
			bsr_id = #{bsr_id}	  	
	 </update>
	<!-- 회원 탈퇴 -->
	<update id="userDrop">
		UPDATE 
			user
		SET
			auth = 0
		WHERE 
			userid = #{userid};
	
	</update>
	
	<!-- 이메일 찾기! -->
	<select id="emailSend" resultType="String" parameterType="String">
		
		SELECT 
			email
		FROM 
			user
		WHERE
			userid = #{userid};
	
	</select>
	
 </mapper>
 
  